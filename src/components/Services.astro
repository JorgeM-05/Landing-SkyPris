---
export interface Service {
    title: string;
    description: string;
    icon: string; // Ruta del icono SVG o imagen
}
const { title, buttonText, buttonLink } = Astro.props;
const benefits = [
    {
        title: "Chatbots AI",
        description:
            "Automatiza la atención al cliente con inteligencia artificial.",
        image: "/assets/Services/bot.svg",
    },
    {
        title: "E-commerce",
        description:
            "Tiendas online eficientes y seguras con integración de pagos.",
        image: "/assets/Services/e-comerce.svg",
    },
];

const services: Service[] = [
    // {
    //     title: "Desarrollo Web",
    //     description: "Creamos sitios web rápidos y optimizados.",   
    //     icon: "/assets/Services/Chatbot.svg",
    // },
    {
        title: "Chatbots",
        description: "Automatizamos la atención con inteligencia artificial.",
        icon: "/assets/Services/Chatbot.svg",
    },
    {
        title: "E-commerce",
        description: "Tiendas online eficientes y seguras.",
        icon: "/assets/Services/e-comerce.svg",
    },
];
---

<section id="services">
    <h2>Nuestros Servicios</h2>
    <div class="services-container">
        {
            services.map((service) => (
                <div class="service-card">
                    <img
                        src={service.icon}
                        alt={service.title}
                        class="service-icon"
                    />
                    <h3>{service.title}</h3>
                    <p>{service.description}</p>
                </div>
            ))
        }
    </div>
    <div class="hook-container">
        <img
            src="/assets/Services/Atronauta.svg"
            alt="Atención"
            class="hook-icon"
        />
        <div class="hook-banner">
            <h1>{title}</h1>
            <a href={buttonLink} class="hero-button">{buttonText}</a>
        </div>
    </div>

    <div class="benefits-container">
        <!-- 🔹 Botones 3D a la izquierda -->
        <div class="benefits-buttons">
            {
                benefits.map((benefit, index) => (
                    <button
                        class="benefit-btn"
                        data-index={index}
                        data-image={benefit.image}
                        data-title={benefit.title}
                        data-description={benefit.description}
                    >
                        {benefit.title}
                    </button>
                ))
            }
        </div>

        <!-- 🔹 Contenido de Beneficios a la derecha -->
        <div id="benefits-content">
            <img
                id="benefit-image"
                src={benefits[0].image}
                alt={benefits[0].title}
                class="benefit-img"
            />
            <h3 id="benefit-title">{benefits[0].title}</h3>
            <p id="benefit-description">{benefits[0].description}</p>
        </div>
    </div>
</section>

<script>
    document.addEventListener("DOMContentLoaded", () => {
        const buttons = document.querySelectorAll(".benefit-btn");
        const title = document.getElementById("benefit-title");
        const description = document.getElementById("benefit-description");
        const image = document.getElementById(
            "benefit-image",
        ) as HTMLImageElement;

        if (!title || !description || !image || buttons.length === 0) {
            console.error("❌ Error: No se encontraron elementos en el DOM.");
            return;
        }

        buttons.forEach((button) => {
            button.addEventListener("click", () => {
                buttons.forEach((btn) => btn.classList.remove("active"));
                button.classList.add("active");

                // Obtener los valores desde los atributos `data-*`
                const newTitle = button.getAttribute("data-title");
                const newDescription = button.getAttribute("data-description");
                const newImage = button.getAttribute("data-image");

                if (newTitle && newDescription && newImage) {
                    title.textContent = newTitle;
                    description.textContent = newDescription;
                    image.src = newImage;
                }
            });
        });

        buttons[0].classList.add("active");
    });
</script>

<style>
    #services {
        padding: 80px 20px;
        text-align: center;
        /* background: linear-gradient(
            to bottom,
            #e3e3e3,
            #ffffff
        );*/
        position: relative;

        background:
            url("/assets/Services/costelacion.svg") no-repeat center
                calc(39% - 69px),
            linear-gradient(to bottom, #e3e3e3, #ffffff);
    }

    h2 {
        font-size: 3rem;
        margin-bottom: 40px;
    }

    .services-container {
        display: flex;
        flex-wrap: wrap;
        gap: 20px;
        justify-content: center;
        max-width: 100% !important; /* 🔹 Evita que se expanda más allá del ancho disponible */
        overflow: hidden !important;
    }

    .service-card {
        background: #ffffff00;
        padding: 20px;
        border-radius: 10px;
        box-shadow: 0 4px 10px rgb(0 0 0 / 0%);
        width: 300px;
        text-align: center;
        transition: transform 0.3s ease-in-out;
    }

    .service-card:hover {
        transform: scale(1.05);
    }

    .service-icon {
        width: 50%;
        margin-bottom: -20px;
    }

    /* 🔹 Contenedor del gancho */
    .hook-container {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 20px;
        margin-top: 50px;
        position: relative;
        max-width: 100% !important; /* 🔹 Evita que se expanda más allá del ancho disponible */
        overflow: hidden !important;
    }

    /* 🔹 Icono al lado izquierdo */
    .hook-icon {
        width: 150px;
        height: 200px;
        animation: pulse 1.5s infinite alternate; /* 🔥 Animación para que llame la atención */
    }

    /* 🔹 Cuadro flotante llamativo */
    .hook-banner {
        background: linear-gradient(
            87deg,
            #508da5,
            #3bb581
        ); /* 🔹 Degradado llamativo */
        padding: 20px 40px;
        max-width: 100%; /* 🔹 Evita que sea más grande que su contenedor */
        height: 80px;
        border-radius: 10px;
        box-shadow: 0 10px 20px rgba(0, 0, 0, 0.3);
        /* box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2); */

        font-size: 1.2rem;
        font-weight: bold;
        transform: translateY(-5px);
        transition: transform 0.3s ease-in-out;
    }
    .hook-banner:hover {
        transform: translateY(-10px) scale(1.03); /* 🔹 Efecto flotante más sutil */
    }

    /* 🔹 Animación del icono */
    @keyframes pulse {
        0% {
            transform: scale(1);
        }
        100% {
            transform: scale(1.1);
        }
    }

    /* 🔹 Responsivo */
    @media (max-width: 768px) {
        .hook-container {
            flex-direction: column;
            text-align: center;
        }

        .hook-icon {
            width: 60px;
            height: 60px;
        }

        .hook-banner {
            font-size: 1rem;
            padding: 15px 30px;
        }
    }

    /* 🔹 Contenedor principal de la sección */
    .benefits-container {
        display: flex;
        gap: 200px;
        margin-top: 60px;
        padding: 40px 20px;
        border-radius: 10px;
        max-width: 1200px; /* 🔹 Evita que se salga del contenedor */
        width: 100%;
        margin-left: auto;
        max-width: 100% !important; /* 🔹 Evita que se expanda más allá del ancho disponible */
        overflow: hidden !important;
    }

    /* 🔹 Botones 3D a la izquierda */
    .benefits-buttons {
        display: flex;
        flex-direction: column;
        gap: 20px;
        margin-left: 10px;
    }

    .benefit-btn {
        background: linear-gradient(145deg, #ffffff, #d1d1d1);

        border: none;
        padding: 12px 40px;
        font-size: 1rem;
        border-radius: 8px;
        font-weight: bold;
        box-shadow: 0 5px 15px rgb(37 114 118 / 67%);
        cursor: pointer;
        transition: all 0.3s ease-in-out;
        margin-top: 18px;
    }

    .benefit-btn:hover {
        transform: translateY(-2px);
        box-shadow: 6px 6px 15px rgba(0, 0, 0, 0.3);
    }

    /* 🔹 Botón activo con efecto 3D */
    .benefit-btn.active {
        background: linear-gradient(84deg, #2a5b76, #208675);
        color: white;
        /* box-shadow: 0 6px 15px rgba(255, 107, 107, 0.5); */
        transform: translateY(-3px);
    }

    /* 🔹 Contenido de Beneficios a la derecha */
    .benefits-content {
        flex: 1;
        background: white;
        padding: 20px;
        border-radius: 8px;
        box-shadow: 0 5px 10px rgba(0, 0, 0, 0.1);
        text-align: left;
        margin-left: 20px;
        max-width: 100% !important; /* 🔹 Evita que se expanda más allá del ancho disponible */
        overflow: hidden !important;
    }

    .benefits-content h3 {
        font-size: 1.5rem;
        color: #5e5c5c;
        margin-bottom: 10px;
    }

    .benefits-content p {
        font-size: 1rem;
        color: #333;
    }
    @media (max-width: 768px) {
        .benefits-container {
            flex-direction: column;
            align-items: center;
            padding: 20px;
        }
        
    }
    /* 🔹 Responsivo */
    @media (max-width: 768px) {
        .benefits-container {
            flex-direction: column;
            align-items: center;
            padding: 20px;
        }

        .benefits-buttons {
            flex-direction: row;
            gap: 15px;
        }

        .benefit-btn {
            font-size: 0.9rem;
            padding: 10px 15px;
        }

        .benefits-content {
            text-align: center;
            max-width: 100% !important; /* 🔹 Evita que se expanda más allá del ancho disponible */
            overflow: hidden !important;
        }
    }
</style>
